apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.library'

//BEGIN CONFIG ANDROID LIB

android {
    compileSdkVersion(28)

    defaultConfig {
        minSdkVersion(21)
        targetSdkVersion(28)
    }

    // By default the android gradle plugin expects to find the kotlin source files in
    // the folder `main` and the test in the folder `test`. This is to be able place
    // the source code files inside androidMain and androidTest folders
    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
            java.srcDirs = ['src/androidMain/kotlin']
            res.srcDirs = ['src/androidMain/res']
        }
        test {
            java.srcDirs = ['src/androidTest/kotlin']
            res.srcDirs = ['src/androidTest/res']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    packagingOptions {
        // Ktor prevents the build otherwise
        exclude 'META-INF/*.kotlin_module'
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.1.0"
}

//END CONFIG ANDROID LIB

//BEGIN KOTLIN MULTIPLAFORM
kotlin {

    android("android")

    // iPhone simulator    : presets.iosX64
    // real iDevice 32 bit : presets.iosArm32 iphone 5 earlier
    // real iDevice 64 bit : presets.iosArm64 iphone 6+
    iosArm64("ios") {
        binaries {
            framework {
                //freeCompilerArgs.add("-Xobjc-generics")
            }
        }
    }
}
//END KOTLIN MULTIPLAFORM

//BEGIN DEPENDENCIES
dependencies {
    def kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //libs for common
    commonMainImplementation kotlin_stdlib

    //libs for android
    androidMainImplementation kotlin_stdlib

    //libs for iOS
    iosMainImplementation kotlin_stdlib
}
//END DEPENDENCIES

//TASK WHICH IS GOING TO BE EXECUTED BY XCODE
task copyFramework {
    def buildType = project.findProperty('kotlin.build.type') ?: 'DEBUG'
    def target = project.findProperty('kotlin.target') ?: 'ios'
    dependsOn kotlin.targets."$target".binaries.getFramework(buildType).linkTask

    doLast {
        def srcFile = kotlin.targets."$target".binaries.getFramework(buildType).outputFile
        def targetDir = getProperty('buildDir')
        copy {
            from srcFile.parent
            into targetDir
            include 'app.framework/**'
            include 'app.framework.dSYM'
        }
    }
}